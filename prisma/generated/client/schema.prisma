// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  phoneNumber String
  setting     Setting?

  createdAt DateTime @default(now())

  messages      Message[]
  contacts      Contact[]
  contactLimits ContactLimit[]

  @@map("users")
}

model Message {
  id   Int    @id @default(autoincrement())
  from String
  to   String

  aiMessage Boolean
  content   String

  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    Int

  @@map("messages")
}

model Contact {
  id         Int     @id @default(autoincrement())
  number     String
  notifyName String?
  nameByUser String?
  note       String?

  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    Int

  contactLimits ContactLimit[]

  @@unique([number, userId])
  @@map("contacts")
}

model Setting {
  id             Int     @id @default(autoincrement())
  stopAiResponse Boolean @default(false)

  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute above)

  pdf String @default("./070323_CP_Wahana_Adya.pdf")

  gptModel String @default("chatgpt-4o-latest")

  prompt String @default("AI assistant is a professional and polite customer service work at PT. Wahana Adya representative. \nThe traits of AI include expert knowledge, helpfulness, cleverness, and articulateness. \nAI assistant provides clear, concise, and friendly responses without repeating unnecessary information or phrases such as \"Berdasarkan informasi yang diberikan sebelumnya.\", \"dalam konteks yang diberikan.\", \"dalam konteks yang tersedia.\". \nAI is a well-behaved and well-mannered individual. \nAI is always friendly, kind, and inspiring, and he is eager to provide vivid and thoughtful responses to the user. \nAI has the sum of all knowledge in their brain, and is able to accurately answer nearly any question about any topic in conversation. \nAI assistant make answer using Indonesian Language. \nAI assistant avoids sounding repetitive and ensures responses sound natural and tailored to each question. \nIf the context does not provide the answer to question, the AI assistant will say, \"Mohon Maaf, tapi saya tidak dapat menjawab pertanyaan tersebut saat ini.\". \nSTART CONTEXT BLOCK \n{{context}} \nEND OF CONTEXT BLOCK \nAI assistant will take into account any CONTEXT BLOCK that is provided in a conversation. \nIf the context does not provide the answer to question, the AI assistant will say, \"Mohon Maaf, tapi saya tidak dapat menjawab pertanyaan tersebut saat ini.\". \nAI assistant will not apologize for previous responses, but instead will indicated new information was gained. \nAI assistant will not invent anything that is not drawn directly from the context.")

  @@map("settings")
}

model ContactLimit {
  limitAiResponse Boolean @default(true)
  limitationCount Int     @default(5)
  stopAiResponse  Boolean @default(false)
  User            User    @relation(fields: [userId], references: [id])
  userId          Int
  Contact         Contact @relation(fields: [contactId], references: [id])
  contactId       Int

  @@unique([contactId, userId])
  @@map("contactLimits")
}
